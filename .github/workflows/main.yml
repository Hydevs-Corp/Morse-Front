name: Build and Push Docker Image

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    build-and-push:
        runs-on: self-hosted

        steps:
            # Étape 1: Récupérer le code source
            - name: Checkout code
              uses: actions/checkout@v4

            # Étape 2: Configurer Docker Buildx (pour les builds multi-plateformes)
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            # Étape 3: Se connecter à Docker Hub
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            # Étape 4: Extraire les métadonnées (tags, labels)
            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: angysquirrel/morse-front
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=raw,value=latest,enable={{is_default_branch}}

            # Étape 5: Construire et publier l'image Docker
            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

    pull-image-and-deploy:
        runs-on: self-hosted

        needs: build-and-push

        steps:
            # Étape 1: Déployer sur le serveur distant via SSH
            - name: Deploy to remote server
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USERNAME }}
                  key: ${{ secrets.VPS_PRIVATE_KEY }}
                  script: |
                      # Tirer l'image Docker
                      docker pull angysquirrel/morse-front:latest

                      # Arrêter et supprimer le conteneur existant
                      docker stop morse-front || true
                      docker rm morse-front || true

                      # Déployer la nouvelle image
                      docker run -d --name morse-front -p 80:80 angysquirrel/morse-front:latest

                      # Afficher les logs du conteneur
                      docker logs morse-front

                      # Vérifier l'état du conteneur
                      if [ "$(docker ps -q -f name=morse-front)" ]; then
                          echo "Container is running successfully."
                      else
                          echo "Container failed to start."
                          exit 1
                      fi
